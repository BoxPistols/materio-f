{
  "extends": [
    "next/core-web-vitals",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/recommended",
    "prettier"
  ],
  "rules": {
    "jsx-a11y/alt-text": "off",
    "react/display-name": "off",
    "react/no-children-prop": "off",
    "@next/next/no-img-element": "off",
    "@next/next/no-page-custom-font": "off",
    // Must add "import type" in front of type imports
    "@typescript-eslint/consistent-type-imports": "error",
    // Do not Allow @ts-ignore
    "@typescript-eslint/ban-ts-comment": "off",
    // Do not Allow any
    "@typescript-eslint/no-explicit-any": "off",
    // Do not Allow unused vars
    "@typescript-eslint/no-unused-vars": "error",
    // Do not Allow non-null assertion
    "@typescript-eslint/no-non-null-assertion": "off",
    // add new line above comment
    "lines-around-comment": [
      "error",
      {
        "beforeBlockComment": true,
        "beforeLineComment": true,
        "allowBlockStart": true,
        "allowObjectStart": true,
        "allowArrayStart": true
      }
    ],
    // Add new line after block
    // "padded-blocks": ["error", "always"],
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": "*",
        "next": [
          "function",
          "multiline-const",
          "export"
        ]
      },
      {
        "blankLine": "any",
        "prev": "export",
        "next": "export"
      },
      {
        "blankLine": "always",
        "prev": [
          "const",
          "let",
          "var"
        ],
        "next": "*"
      },
      {
        "blankLine": "any",
        "prev": [
          "const",
          "let",
          "var"
        ],
        "next": [
          "const",
          "let",
          "var"
        ]
      }
    ],
    // Add new line above return
    "newline-before-return": "error",
    // Add new line after import
    "import/newline-after-import": [
      "error",
      {
        "count": 1
      }
    ],
    // Add new line between imports
    "import/order": [
      "error",
      {
        "groups": [
          [
            "builtin"
          ],
          [
            "external"
          ],
          [
            "internal",
            "parent",
            "sibling",
            "index"
          ],
          [
            "object",
            "unknown"
          ]
        ],
        "pathGroups": [
          {
            "pattern": "react",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "next/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "~/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@/**",
            "group": "internal"
          }
        ],
        "pathGroupsExcludedImportTypes": [
          "react",
          "type"
        ],
        "newlines-between": "always-and-inside-groups"
      }
    ],
    // Add new line between imports and first import
    "@typescript-eslint/ban-types": [
      "error",
      {
        "extendDefaults": true,
        "types": {
          "Function": "Use a specific function type instead",
          "Object": "Use object instead",
          "Boolean": "Use boolean instead",
          "Number": "Use number instead",
          "String": "Use string instead",
          "Symbol": "Use symbol instead",
          "any": false,
          "{}": false
        }
      }
    ]
  },
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/parsers": {
      "@typescript-eslint/parser": [
        ".ts",
        ".tsx"
      ]
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true
      }
    }
  },
  "overrides": [
    {
      "files": [
        "*.ts",
        "*.tsx",
        "src/iconify-bundle/*"
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-var-requires": "off"
      }
    }
  ],
  "parserOptions": {
    "project": "./tsconfig.json"
  }
}
